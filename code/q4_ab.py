# -*- coding: utf-8 -*-
"""q4_b.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X8fpnOKCa9Er-3n7-WkjaA9Hbhyo01de
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import h5py
import math

x1=h5py.File('../data/mnist.mat','r')
x_imgs=x1.get('digits_train')
x_imgs=np.array(x_imgs,dtype='float32')
x_labels=x1.get('labels_train')
x_labels=np.array(x_labels,dtype='float32')
dig_data=[[],[],[],[],[],[],[],[],[],[]]
for i in range(10):
  dig_data[i]=x_imgs[x_labels[0]==i]
for i in range(10):
  for j in range(dig_data[i].shape[0]):
    dig_data[i]=np.reshape(dig_data[i],(dig_data[i].shape[0],28*28,1))

def trans(arr):
    x,y=np.shape(arr)
    xarr=np.zeros((y,x))
    for i in range(x):
      for j in range(y):
          xarr[j][i]=arr[i][j]
    return xarr
def mean(arr):
  mean=np.zeros((784,1))
  for i in arr:
    mean=mean+i
  return mean/arr.shape[0]
def cov(arr):
  a_mean=mean(arr)
  mat=np.zeros((28*28,28*28))
  for i in arr:
    mat=mat+np.matmul(i-a_mean,trans(i-a_mean))
  return mat/arr.shape[0]
def principle_comp(C):
  W,V=np.linalg.eig(C)
  vect=V[:,np.argmax(W)]
  vect=np.reshape(vect,(784,1))
  return (vect,W[np.argmax(W)])

cov_arr=np.zeros((10,784,784))
for i in range(10):
  cov_arr[i]=cov(dig_data[i])

#part c done here , all comps at pri_cmps and eigens at eigs
pri_cmps=np.zeros((10,784,1))
eigs=np.zeros(10)
for i in range(10):
  pri_cmps[i],eigs[i]=principle_comp(cov_arr[i])

nums=[50,20,60,50,50,50,50,50,50,50]#number of components for each number
print('red line signifies number of components:)')
for i in range(10):
  eigs,V=np.linalg.eig(cov_arr[i])
  plt.xlabel('n->')
  plt.ylabel('eigen value')
  plt.title('graph for '+str(i)+"'s"+' eigen values')
  plt.plot(range(1,28*28+1),(np.sort(eigs))[::-1],'g-')
  plt.plot([nums[i],nums[i]],[500000,0],'r-')
  plt.show()

#plotting 3 subplot in each plot to justify and illustrate importance of priciple modes
#sorry for the typos ,late nights suck!
for i in range(10):
  fig=plt.figure(figsize=(10,10))
  fig.add_subplot(1,3,1)
  plt.imshow(trans(np.reshape(mean(dig_data[i]),(28,28))-2*math.sqrt(eigs[i])*np.reshape(pri_cmps[i],(28,28))))
  plt.axis('off')
  plt.title('mue-component')
  fig.add_subplot(1,3,2)
  plt.imshow(trans(np.reshape(mean(dig_data[i]),(28,28))))
  plt.axis('off')
  plt.title('mue')
  fig.add_subplot(1,3,3)
  plt.imshow(trans(np.reshape(mean(dig_data[i]),(28,28))+2*math.sqrt(eigs[i])*np.reshape(pri_cmps[i],(28,28))))
  plt.axis('off')
  plt.title('mue+component')
  plt.show()
