# -*- coding: utf-8 -*-
"""q2_b.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yac6wtyerwaKNWvmEqZYSJAYt6O6jDJ4
"""

import numpy as np
import matplotlib.pyplot as plt
import math

C=np.array([[1.6250,-1.9486],[-1.9486, 3.8750]])
mue=np.array([[1],[2]])
W,V=np.linalg.eig(C)
A=np.array([[math.sqrt(W[0])*V[0,0],math.sqrt(W[1])*V[0,1]],[math.sqrt(W[0])*V[1,0],math.sqrt(W[1])*V[1,1]]])
output=np.array([np.zeros((10,2,1)),np.zeros((100,2,1)),np.zeros((1000,2,1)),np.zeros((10000,2,1)),np.zeros((100000,2,1))])

def gen_data(i_kia):
  np.random.seed(i_kia)
  for i in range(1,6):
    IN=np.random.randn(10**i,2,1)
    for j in range(10**i):
      output[i-1][j]=np.matmul(A,IN[j])+mue
    output[i-1]=np.array(output[i-1])

def trans(arr):
    x,y=np.shape(arr)
    xarr=np.zeros((y,x))
    for i in range(x):
      for j in range(y):
          xarr[j][i]=arr[i][j]
    return xarr
def MLE(arr):
  mean=trans(np.sum(arr,axis=0)/(np.shape(arr)[0]))
  a=np.zeros((2,2))
  for i in arr:
    a+=(trans(i)-mean)*trans(trans(i)-mean)
  a=a*(1/arr.shape[0])
  K=trans(a)
  return (mean,K)
def error(arr,mue):
  err=0
  siz=0
  for i in range(arr.size):
    err+=(arr[0][i]-mue[i][0])**2
    siz+=mue[i][0]**2
  return math.sqrt(err)/math.sqrt(siz)

err=np.zeros((5,100))
for i in range(100):
   gen_data(10*i+1442)
   for j in range(1,6):
     gen_mean,K=MLE(output[j-1])
     err[j-1][i]=error(gen_mean,mue)

#plotting our values
plt.boxplot([err[0],err[1],err[2],err[3],err[4]])
plt.xlabel('log(N)')
plt.ylabel('spread of error for each N')
plt.title('boxplot of error in Mean vs log(N)')
plt.show()